//https://practice.geeksforgeeks.org/problems/array-to-bst/0
#include <iostream>
#include<cmath>
using namespace std;
//HELP:https://www.geeksforgeeks.org/sorted-array-to-balanced-bst/
struct Node{
	        int data;
	        Node* left;
	        Node* right;
	    };
	    //Allocate new node
	    Node* newNode(int data){
	        Node* node= new Node();
	        node->data=data;
	        node->left=NULL;
	        node->right=NULL;
	        return node;
	    }
	    Node* sortedarrayToBST(long long int a[], int start, int end){
	        if(start>end) return NULL;
	        int mid=floor((start+end)/2);
	        //make mid element of array as root
	        Node* root=newNode(a[mid]);
	        root->left=sortedarrayToBST(a,start,mid-1);
	        root->right=sortedarrayToBST(a,mid+1,end);
	        return root;
	    }
	    //printing preorder traversal
	    void preorder(Node* node){
	        if(node==NULL)return;
	       cout<<node->data<<" ";
	       preorder(node->left);
	       preorder(node->right);
	    }
int main() {
	//code
	int t;
	cin>>t;
	while(t--){
	    long int n;
	    cin>>n;
	    long long int a[n];
	    for(int i=0;i<n;i++)
	        cin>>a[i];
	   //convert array to bst
	    Node* root=sortedarrayToBST(a,0,n-1);
	    preorder(root);
	    cout<<endl;
	}//end while(t--)
	return 0;
}
