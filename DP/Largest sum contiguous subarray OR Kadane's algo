//my solution:https://practice.geeksforgeeks.org/viewSol.php?subId=0d164bb5222015d4d09f57c4e092a0d7&pid=106&user=bhavanasinhanew15
#include<iostream>
#include<climits>
#include<vector>
//#include<bits/stdc++.h>
using namespace std;

int kadane(int *arr,int n){
    
    int max_global,max_current;
    max_global=max_current=arr[0];
    
    for(int i=1; i<n; i++){
        
        max_current = max(arr[i], max_current+arr[i]);
        
        if(max_current>max_global){
            max_global = max_current;
        }
    }
    return max_global;
    
}

int main() {
	//code
	int t;cin>>t;
	while(t--){
	    int n; cin>>n;//no. of elements in array
	    int a[n];
	    for(int i=0;i<n;i++) cin>>a[i];
	    /*int max = MaxSubarraySum(a,n);
	    if(max==0) cout<<"-1"<<endl;
	    else cout<<max<<endl;*/
	    cout<<kadane(a,n)<<"\n";
	    
	}
	return 0;
}
